@using teste.Entities
@model List<Banco>
@{
    ViewData["Title"] = "Caixa";
}
<style>
    .register-container {
        background-color: #f5f5f5;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 5px 10px 0px rgba(0, 0, 0, 0.3) -5px -10px 10px 0px rgba(255, 255, 0.3);
        max-width: 1800px;
        margin: 0 auto;
        margin-bottom: 40px;
        margin-top: 50px; /* Espaço superior */
        border: 2px solid #333; /* Adiciona uma borda escura */
    }

    .register-title {
        text-align: center;
        margin-bottom: 20px;
    }
</style>

<div class="register-container">
@if (TempData["Sucesso"] != null)
{
    <div class="alert alert-success" role="alert">
        <button type="button" class="btn btn-sm close close-alert" aria-label="Close">X</button>
        @TempData["Sucesso"]
    </div>
}
@if (TempData["Falha"] != null)
{
    <div class="alert alert-danger" role="alert">
        <button type="button" class="btn btn-sm close close-alert" aria-label="Close">X</button>
        @TempData["Falha"]
    </div>
}

<style>
    /* Estilo para deixar a tabela mais bonita */
    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f9f9f9;
    }

    /* Estilo para o total do caixa */
    #totalCaixa {
        font-weight: bold;
        max-width: 100px; /* Defina a largura máxima desejada */
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
</style>

    <h1 class="text mb-4"> Caixa</h1>
    <div class="d-grid gap-2 d-md-flex justify-content-end mb-3">
        <div>
            <a class="btn btn-warning btn-outline-dark btn" asp-controller="Analiticas" asp-action="Buscar">Relatorio <i class="fa-solid fa-table-list"></i></a>
        </div>
    </div>
    <div class="table-responsive">
    <table class="table table-striped table-bordered" id="table-produtos">
        <thead class="thead-dark">
            <tr>
                <th scope="col">#</th>
                <th scope="col">Produto</th>
                <th scope="col">Pagamento</th>
                <th scope="col">Custos</th>
                <th scope="col">Unidade</th>
                <th scope="col">Valor</th>
                <th scope="col">Data</th>
                <th scope="col">Total</th>
            </tr>
        </thead>
        <tbody>

            @if (Model != null && Model.Any())
            {
                int counter = 1;
                decimal? totalCaixa = 0; // Variável para armazenar o valor total do caixa
      
                foreach (Banco produto in Model)
                {
                    decimal? total = (produto.Valor * produto.FkNotasNavigation?.Uni) - produto.FkNotasNavigation?.Gastos;

                    if (produto.Pagamento == "Retirada")
                    {
                        total = -produto.Valor;
                    }

                    totalCaixa += produto.Caixa; // Somar ao total do caixa

                    <tr>
                        <td>@counter</td>
                        <td>@produto.Razao</td>
                        <td>@produto.Pagamento</td>
                        <td>@produto.FkNotasNavigation?.Gastos</td>
                        <td>@produto.FkNotasNavigation?.Uni</td>
                        <td>@produto.Valor</td>
                        <td class="text-center">@produto.Dia</td>
                        <td>@total</td> <!-- Exibe o valor final (Caixa) -->
                    </tr>
                    counter++;
                }
                <thead class="table-dark">
                    <tr>
                        <th colspan="7" class="text-right">Total do Caixa:</th>
                        <td id="totalCaixa" class="text-right">@totalCaixa</td> <!-- Exibe o valor total do caixa -->
                    </tr>
                </thead>
            }
        </tbody>
    </table>
</div>
<div class="text-center">
        <a class="btn btn-outline-dark" role="button" asp-action="Retirada">Retirar Valor <i class="fa-solid fa-hand-holding-dollar"></i></a>
</div>
</div>